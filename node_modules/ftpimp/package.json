{
  "name": "ftpimp",
  "version": "1.0.1",
  "preferGlobal": true,
  "license": "MIT",
  "homepage": "http://ftpimp.net",
  "description": "FTP Improved - A better FTP API, built for NodeJS.",
  "main": "./ftpimp-app",
  "directories": {
    "lib": "./lib"
  },
  "scripts": {
    "start": "",
    "test": ""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sparkida/ftpimp"
  },
  "keywords": [
    "ftp",
    "client",
    "improved",
    "file transfer",
    "mput",
    "mget"
  ],
  "dependencies": {
    "colors": "*"
  },
  "engine": {
    "node": ">=0.8.x"
  },
  "author": {
    "name": "Nicholas Riley",
    "email": "nick@sparkida.com",
    "url": "http://sparkida.com"
  },
  "readme": "\nFTPimp V1.0.0 - stable!\n=======================\nAn improved implementation of the FTP service API for NodeJS.\n<br>\n**Everything has been greatly improved at this point. Passing @ 100%**\n\n\n\nAPI Documentation\n-----------------\nFor a full breakdown of this API, including examples [&not;FTPimp.net](http://ftpimp.net)\n\n\nFind a Bug?\n-----------\nPlease let me know so that I can fix it ASAP, cheers \n[&not;Report a Bug](https://github.com/sparkida/ftpimp/issues)\n\n\nFeatures\n--------\n- Recursively put files, and create directories\n- Recursively delete directories\n- UNIX and Windows\n- Optional, automated login\n- Overrideable methods\n- Node-like, event driven, process chain\n- Propietary Cue and helper methods for controlling flow\n  \n\n\nAdditional Info\n---------------\nI have a working implementation of FTPimp in a file synchronization manager, built for developers in rapid release / multi-project scenarios, that I'll be releasing within the week to demonstrate.\n\n* Most issues will likely be the result of a lack in documentation, which I'm working on and will be updating shortly\n    - by default, FTPimp uses passive connections, this can be changed; **actually FTPimp is OOP, you can override everything to your liking pretty quickly and easily.**\n    - every cue runs on the same level the command was executed in and each cued command has the ability to group a series of commands into a single cue, this allows you to chain methods for building procedures such as the recursive mkdir procedure, which does exactly what it says: recurses through the FTP.mkdir command in a single cue.\n\n\n\nExamples\n--------\n\n###Default config\n```javascript\nvar config = {\n        host: 'localhost',\n        port: 21,\n        user: 'root',\n        pass: '',\n        debug: false\n    };\n```\n\n###Automatically login to FTP and run callback when ready\n```javascript\nvar FTP = require('ftpimp'),\n    ftp = FTP.create(config),\n    connected = function () {\n        console.log('connected to remote FTP server');\n    };\n    \nftp.events.once('ready', connected);\n```\n\n###Setup FTPimp and login whenever\n```javascript\nvar FTP = require('ftpimp'),\n    ftp = FTP.create(config, false);\n\n//do some stuff...\nftp.connect(function () {\n    console.log('Ftp connected');\n});\n```\n\n###Recursively create directories...and then delete them for fun!\n```javascript\n//create a temporary directory name\nvar tempDir = 'foo' + String(new Date().getTime()),\n    recursive = true;\n\nftp.mkdir(tempDir + '/some/deep/directory', function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('directories created: ', data);\n        //recursively delete our temporary directory\n        ftp.rmdir(tempDir, function (err, data) {\n            console.log(err, data);   \n        });\n    }\n}, recursive);\n```\n\n\n\n\nUpdates\n-------\n* July 9, 2014 8:08am(PDT) - **Major Update** - v1.0.0 - This is the pre-release candidate, everything has passed testing at this point, I will shift my focus to documentation and environment specific testing while tackling active and passive connection concerns. \n* July 8, 2014 3:38am(PDT) - v0.5.42 - The primary Cue **FTP.cue** will now emit a **\"cueEmpty\"** event when the last item in the cue completes.\n* July 8, 2014 3:21am(PDT) - v0.5.4 - **FTP.rename** will return an error if the file is not found\n* July 7, 2014 8:46am(PDT) - Fixed a cueing issue that occured when recursively removing directories using **FTP.rmdir**.\n* July 7, 2014 6:46am(PDT) - Fixed an issue that occurred when receiving data through ls, lsnames.\n* July 5, 2014 8:36am(PDT) - FTP.mkdir will now make recursive directories within the same cue group. Cue groups are a new feature as of **V0.5.0**\n* July 4, 2014 9:15pm(PDT) - **Major Update** Beta v0.5.0 **stable**\n    - The primary cue that runs all methods - **(FTP.run)** - now provides full control over how you cue your processes with the use of two parameters <br>**runNow** - to run the next command immediately <br>&<br>**cueGroup** - this tells FTP.run that the command belongs to a cue group and which will escape the **endproc** that loads and fires the next cue in line. Cue groups are one level deep and exist until a command is used where the **cueGroup** parameter is false.\n* July 1, 2014 6:44am(PDT) - FTP.put method will no longer prioritize put requests. Execution order is now linear.\n* Jun 26, 2014 7:41am(PDT) - Methods can now be passed a runNow parameter, to bypass cueing\n* Jun 23, 2014 8:24pm(PDT) - Restructured cues to work within FTP.run\n* Jun 23, 2014 7:46am(PDT) - Fixed a cueing issue with mkdir\n* Jun 22, 2014 5:20am(PDT) - FTP.mkdir and FTP.rmdir both have the option to recursively create and delete directories.\n* Jun 21, 2014 3:43pm(PDT) - Fixed regular expression in FTP.ls to grab deep paths\n* Jun 21, 2014 12:16pm(PDT) - FTP.put will now return error if the local file is not found\n* Jun 20, 2014 6:56am(PDT) - Fixed an issue with errors not being sent to the callback method\n* Jun 19, 2014 4:15pm(PDT) - Fixed an issue that occured when 0 bytes are received in data transfers\n* Jun 19, 2014 1:35pm(PDT) - **Major Update** Beta v0.4.0 **stable**\n    - **FTP.connect has been replaced for FTP.create**\n    - Resolved all known issues with the cueing of commands and data transfers. Good to Go!\n* Jun 18, 2014 4:35am(PDT) - Fixed an issue with performing multiple data requests\n* Jun 18, 2014 10:35am(PDT) - Fixed an issue with the response handler failing at login \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sparkida/ftpimp/issues"
  },
  "_id": "ftpimp@1.0.1",
  "_from": "ftpimp@~1.0.1"
}
